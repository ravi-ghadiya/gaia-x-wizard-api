buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
    id "org.sonarqube" version "4.2.1.3168"
}

group = "${group}"
version = "${version}"

subprojects {
    apply {
        plugin "java"
        plugin "org.springframework.boot"
        plugin "io.spring.dependency-management"
        plugin 'jacoco-report-aggregation'
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_17
    }

    repositories {
        mavenCentral()
        maven { url 'https://repo.danubetech.com/repository/maven-public' }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        implementation "org.springdoc:springdoc-openapi-starter-common:${openApiVersion}"
        implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openApiVersion}"
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        implementation 'org.springframework.vault:spring-vault-core:3.0.4'

        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.boot:spring-boot-testcontainers'
        testImplementation 'org.testcontainers:junit-jupiter'
        testImplementation 'org.testcontainers:postgresql'
        testImplementation 'org.testcontainers:vault'
        testImplementation "com.github.dasniko:testcontainers-keycloak:${keycloakTestContainerVersion}"
        testImplementation "com.github.curious-odd-man:rgxgen:${regexGeneratorVersion}"
        testImplementation 'org.mockito:mockito-inline'
        testImplementation "org.testcontainers:localstack:1.19.1"
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    bootJar {
        enabled = false
    }

    jacocoTestReport {
        dependsOn test
    }

    jacoco {
        toolVersion = "${jacocoVersion}"
    }

    jacocoTestReport {
        reports {
            xml.required = false
            csv.required = false
            html.required = true
        }
    }
}