server:
  port: ${APPLICATION_PORT:8080}
  shutdown: graceful
  compression:
    enabled: true

wizard:
  security:
    enabled: true
    realm: Gaia-x
    clientId: pr-gaia-x-wizard
    auth-server-url: http://localhost:8080
    authUrl: ${wizard.security.auth-server-url}/realms/${wizard.security.realm}/protocol/openid-connect/auth
    tokenUrl: ${wizard.security.auth-server-url}/realms/${wizard.security.realm}/protocol/openid-connect/token
    refreshTokenUrl: ${wizard.security.token-url}
    corsOrigins: "*"

spring:
  profiles:
    active: ${APPLICATION_ENVIRONMENT:dev}
  liquibase:
    change-log: classpath:/db/changelog/changelog-master.xml
  main:
    allow-bean-definition-overriding: true
  application:
    name: smartsense-gaia-x-api
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}?useSSL=${USE_SSL}
    username: ${DB_USER_NAME}
    password: ${DB_PASSWORD}
    initialization-mode: always
    hikari:
      connectionTimeout: ${DB_CONNECTION_TIME_OUT:120000}
      maximumPoolSize: ${DB_POOL_SIZE:10}
      leakDetectionThreshold: 50000
      maxLifetime: 30000
  quartz:
    job-store-type: jdbc
    properties:
      org:
        quartz:
          scheduler:
            instanceName: smartSense
            instanceId: AUTO
            batchTriggerAcquisitionMaxCount: ${QUARTZ_BATCH_TRIGGER_ACQUISITION_MAX_COUNT:10}
            batchTriggerAcquisitionFireAheadTimeWindow: 1000
          jobStore:
            isClustered: true
            clusterCheckinInterval: 10000
            acquireTriggersWithinLock: true
            driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
          threadPool:
            threadCount: ${QUARTZ_THREAD_COUNT:10}
  security:
    oauth2:
      resourceserver:
        jwt:
          #Issuer-uri indicates the iss claims from jwt token
          issuer-uri: ${wizard.security.auth-server-url}/realms/${wizard.security.realm}
          jwk-set-uri: ${wizard.security.auth-server-url}/realms/${wizard.security.realm}/protocol/openid-connect/certs

  jpa:
    show-sql: false
    hibernate:
      ddl-auto: none
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        proc:
          param_null_passing: true
        c3p0:
          timeout: 1800
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 100
          batch_versioned_data: true
        order_inserts: true
        order_updates: true

management:
  server:
    port: ${MANAGEMENT_PORT:8090}
  endpoint:
    health:
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: '*, pre-stop'
  health:
    db:
      enabled: true
    livenessState:
      enabled: true
    readinessState:
      enabled: true

springdoc:
  swagger-ui:
    oauth:
      clientId: pu-gaia-x-wizard
      clientSecret:
    disable-swagger-default-url: true
    path: /ui/swagger-ui
    show-common-extensions: true
    csrf:
      enabled: true
  api-docs:
    path: /docs/api-docs

aws:
  accessKey: ${AWS_ACCESS_KEY}
  secretKey: ${AWS_SECRET_KEY}
  hostedZoneId: ${HOSTED_ZONE_ID}
  serverIp: ${SERVER_IP}
  baseDomain: ${BASE_DOMAIN}
  bucketName: ${S3_BUCKET_NAME}
k8s:
  basePath: ${K8S_BASE_PATH}
  token: ${K8S_TOKEN}
  serviceName: ${K8S_SERVICE_NAME}
signer:
  host: ${SIGNER_HOST}
vereign:
  host: ${VEREIGN_HOST}
  credentialDefinitionId: ${CREDENTIAL_DEFINITION_ID}

keycloak:
  authServer: ${AUTH_SERVER}
  realm: ${REALM}
  clientId: ${KC_CLIENT_ID}
  clientSecret: ${KC_SECRET_KEY}
  webAuthRedirectUrl: ${WEB_AUTH_REDIRECT_URL}
  actionTokenLifespan: ${ACTION_TOKEN_LIFESPAN}

feign:
  client:
    config:
      default:
        loggerLevel: full

